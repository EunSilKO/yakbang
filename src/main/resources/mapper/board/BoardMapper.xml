<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yakbang.mapper.board.BoardMapper">
<!-- 질문  -->
    <insert id="insertBoardQuestion">
        <selectKey resultType="long" keyProperty="questionId" order="BEFORE">
            SELECT SEQ_QA.nextval FROM DUAL
        </selectKey>
        INSERT into TBL_QA (QUESTION_ID, PILL_ID, MEMBER_ID, TITLE, CONTENT, WRITE_DATE)
        values (#{questionId}, #{pillId}, #{memberId}, #{title}, #{content}, SYSDATE)
    </insert>

<!--  질문 게시판  -->
    <select id="selectQuestionList">
        SELECT Q.QUESTION_ID, Q.MEMBER_ID, Q.TITLE, Q.CONTENT,
               M.NAME, M.GENDER,
               FLOOR(MONTHS_BETWEEN(SYSDATE, M.BIRTH) / 120) * 10 AS age, A.ANSWER_NO
        FROM TBL_QA Q JOIN TBL_MEMBER M
               ON Q.MEMBER_ID = M.MEMBER_ID
        LEFT JOIN TBL_ANSWER A
               ON Q.QUESTION_ID = A.QUESTION_ID
        ORDER BY Q.QUESTION_ID DESC
    </select>

<!-- 질문 게시판 상세  -->
    <select id="selectQuestionDetail">
        SELECT Q.QUESTION_ID, Q.MEMBER_ID, Q.PILL_ID, Q.TITLE, Q.CONTENT, Q.VIEW_COUNT,
               TO_CHAR(Q.WRITE_DATE, 'YYYY-MM-DD') AS WRITE_DATE,
               M.NAME, M.GENDER,
               A.ANSWER_CONTENT,
               TO_CHAR(A.ANSWER_DATE, 'YYYY-MM-DD') AS ANSWER_DATE, A.ANSWER_NO,
               E.NAME expertName, E.JOB, E.PHARMACY_ADDRESS
        FROM TBL_QA Q JOIN TBL_MEMBER M
                ON Q.MEMBER_ID = M.MEMBER_ID
        LEFT JOIN  TBL_ANSWER A
                ON Q.QUESTION_ID = A.QUESTION_ID
        LEFT JOIN TBL_EXPERT_MEMBER E
                ON E.EXPERT_ID = A.EXPERT_ID
        where Q.QUESTION_ID = #{questionId}
    </select>

<!--  게시글 검색  -->
    <select id="selectBoardSearch">
        SELECT Q.QUESTION_ID, Q.MEMBER_ID, Q.TITLE, Q.CONTENT,
               M.NAME, M.GENDER, FLOOR(MONTHS_BETWEEN(SYSDATE, M.BIRTH) / 120) * 10 AS age,
               A.ANSWER_TITLE, A.ANSWER_NO,
               NVL(J.HAS_IMAGE, 0) AS HAS_IMAGE
        FROM TBL_QA Q
            JOIN TBL_MEMBER M ON Q.MEMBER_ID = M.MEMBER_ID
            LEFT JOIN TBL_ANSWER A ON Q.QUESTION_ID = A.QUESTION_ID
            LEFT JOIN ( SELECT Q.QUESTION_ID, COUNT(Q.QUESTION_ID) AS HAS_IMAGE
                        FROM TBL_QA Q
                        WHERE CONTENT LIKE '%img%'
                        GROUP BY Q.QUESTION_ID) J ON J.QUESTION_ID = Q.QUESTION_ID
            WHERE (Q.TITLE LIKE '%' || #{keyword} || '%' OR
                   Q.CONTENT LIKE '%' || #{keyword} || '%' OR
                   M.NAME LIKE '%' || #{keyword} || '%')
        ORDER BY Q.QUESTION_ID DESC
    </select>

<!-- 조회수 증가 -->
    <update id="updateViewCount">
        update TBL_QA
        set VIEW_COUNT = VIEW_COUNT + 1
        where QUESTION_ID = #{questionId}
    </update>

</mapper>